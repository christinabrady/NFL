cars2 <- lm(mgp~I(wt*2), mtcars)
cars2 <- lm(mpg~I(wt*2), mtcars)
summary(cars2)
cars2 <- lm(mpg~I(wt*.5), mtcars)
summary(cars2)
car2coef <- summary(cars2)$coefficients
car2ci <- car2coef[2,1] + c(-1,1)*qt(.975, df=cars2$df)*car2coef[2,2]
car2ci
cars2 <- lm(mpg~I(wt*2), mtcars)
car2ci <- car2coef[2,1] + c(-1,1)*qt(.975, df=cars2$df)*car2coef[2,2]
car2ci
car2coef <- summary(cars2)$coefficients
car2ci <- car2coef[2,1] + c(-1,1)*qt(.975, df=cars2$df)*car2coef[2,2]
car2ci
library(UsingR)
data(diamond)
fit <- lm(price~carat, data=diamond)
summary(fit)
fit2 <- lm(price~I(carat*10), data=diamond)
fit2
avcar <- lm(mpg~I(wt-mean(wt)), data=mtcars)
avcoef <- summary(avcar)$coefficients
avcoef
avcar[1,1] - qt(.975, df=avcar$df)*avcoef[1,2]
avcar[1,1]
avcoef[1,1] - qt(.975, df=avcar$df)*avcoef[1,2]
coef(fit)[1]
fit
coef(fit)[2]
cars
new_car <- coef(cars)[1] + 3*coef(cars)[2]
new <- predict(cars, newdata=data.frame(wt=new_car))
new
new.car
new_car
new_car + carsci
new_car + carci
new <- predict(cars, newdata=data.frame(wt=new_car), interval="confidence")
summary(new)
new
new2 <- predict(cars, newdata=data.frame(wt=3), interval="confidence")
new2
new3 <- predict(cars, newdata=data.frame(wt=3), interval="prediction")
new3
q6 <- lm(mpg~I(wt*2), data=mtcars)
summary(q6)
q6coef <- summary(q6)$coefficients
q6coef[2,1] c(-1,1)*qt(.975, df=q6$df)*q6coef[2,2]
q6coef[2,1]+c(-1,1)*qt(.975, df=q6$df)*q6coef[2,2]
q6 <- lm(mpg~I(wt*.5), data=mtcars)
q6coef <- summary(q6)$coefficients
q6coef[2,1]+c(-1,1)*qt(.975, df=q6$df)*q6coef[2,2]
summary(q6)
summary(cars)
install.packages("caret")
library(caret)
library(kernlab)
data(spam)
inTrain <- createDataPartition(y=spam$type, p=0.75, list=FALSE)
training <- spam[inTrain,]
testing <- spam[-inTrain,]
dim(training)
set.seed(32343)
modelFit <- train(type~.,data=training, method="glm")
install.packages("e1071")
set.seed(32343)
modelFit <- train(type~.,data=training, method="glm")
modelFit
modelFit$finalModel
predictions <- predict(modelFit, newdata=testing)
confusionMatrix(predictions, testing$type)
16/16
18/22
16/(3.14*8^2)
22/(3.14*9^2)
install.packages("ISLR")
library(ISLR)
library(ggplot2)
library(caret)
data(wage)
summary(wage)
data(Wage)
summary(Wage)
inTrain <- createDataPartition(y=Wage$wage, p=0.7, list=FALSE)
training <- Wage[inTrain, ]
testing <- Wage[-inTrain, ]
dim(training); dim(testing)
featurePlot(x=training[, c("age", "education", "jobclass")], y=training$wage, plot="pairs")
qplot(age, wage, data=training)
qplot(age, wage, colour=jobclass, data=training)
qq <- qplot(age, wage, colour=education, data=training)
qq +geom_smooth(method='lm', formula=y~x)
cutWage <- cut2(training$wage, g=3)
library(Hmisc)
cutWage <- cut2(training$wage, g=3)
table(cutWage)
p1 <- qplot(cutWage, age, data=training, fill=cutWage, geom=c("boxplot")
)
p1
p2 <- qplot(cutWage, age, data=training, fill=cutWage, geom=c("boxplot", "jitter")
)
grid.arrange(p1,p2, ncol=2)
plot(wage, colour=education, data=training, geom="density")
qplot(wage, colour=education, data=training, geom="density")
names(gss)
summary(gss.12)
summary(gss12)
nrow(gss12)
interest <- c("age", "sex", "race", "hispanic", "educ", "siblings", "coninc", "region", "religion", "attend", "class", "union", "tvhours", "helppoor")
gssint <- gss12[, names(gss12) %in% interest]
names(gssint)
summary(gssint)
gssint <- omit.na(gssint)
gssint <- na.omit(gssint)
summary(gssint)
gssint <- gss12[, names(gss12) %in% interest]
str(gssint)
?na.omit
View(gssint)
?featurePlot
featurePlot(gssint, "scatter")
featurePlot(x=gssint, y=gssint$helppoor, plot="pairs")
interest <- c("age", "sex", "race", "hispanic", "educ", "coninc", "religion", "class", "union", "tvhours", "helppoor")
gssint <- gss12[, names(gss12) %in% interest]
getahead <- c("getahead", "coninc", "educ", "tvhours", "sex")
gssahead <- gss12[, names(gss12) %in% getahead]
summary(gssahead)
featurePlot(x=gssahead, y=gssahead$getahead, plot="pairs")
mosaicplot(gss12$educ, gss12$getahead)
mosaicplot(table(gss12$educ, gss12$getahead))
head(gss12$coninc)
plot(gss12$getahead~gss12$coininc)
plot(gss12$getahead,gss12$coininc)
mosaicplot(table(gss12$class, gss12$getahead))
mosaicplot(table(gss12$sex, gss12$getahead))
upper <- gss12[, class=="upper"]
upper <- gss12[, gss12$class=="upper"]
upper <- subset(gss12, gss12$class=="upper")
summary(upper)
upper2 <- upper[, c("age", "coninc", "educ")]
summary(upper2)
str(gss12$class)
names(gss12$class)
summary(gss12$class)
upper <- subset(gss12, gss12$class=="Upper Class")
upper2 <- upper[, c("age", "coninc", "educ")]
summary(upper2)
table(upper2~.)
table(upper2)
summary(upper2)
nrow(upper2)
nrow(gss12)
summary(gss12$coninc)
table(gss12$coninc)
table(gss12$class)
prop.table(gss12$class)
prop.table(gss12$class,1)
prop.table(table(gss12$class,1))
prop.table(table(gss12$class))
table(upper2$degree)
summary(upper2$degree)
table(upper2$educ)
with(gss12, table(degee~paeduc+maeduc))
with(gss12, tapply(table(degee~paeduc+maeduc))
)
with(gss12, tapply(degree, table(paeduc, maeduc))
)
with(gss12, table(degree, paeduc))
hist(gss12$paeduc)
hist(gss12$paeduc, bins=20)
?hist()
hist(gss12$paeduc, breaks=20)
hist(gss12$educ, breaks=20)
hist(gss12$maeduc, breaks=20)
mosaicplot(table(gss12$class, gss12$degree))
x <- <- c("age", "sex", "race", "hispanic", "educ", "coninc", "religion", "class", "union", "getahead")
x <- c("age", "sex", "race", "hispanic", "educ", "coninc", "religion", "class", "union", "getahead")
gssx <- gss12[, names(gss12) %in% x]
gsstrain <- createDataPartition(y=gssx$getahead, p=.7, list=FALSE)
gsslit <- createDataPartition(y=gssx$getahead, p=.7, list=FALSE)
gsstrain <- gssx[gsslit]
gsstest <- gssx[-gsslit]
summary(gsstrain)
summary(gssx)
library(caTools)
sample.split(gssx$getahead, SplitRation=.7)
sample.split(gssx$getahead, SplitRatio=.7)
split <- sample.split(gssx$getahead, SplitRatio=.7)
gssxtrain <- subset(gssx, split=TRUE)
gssxtest <- subset(gssx, split=FALSE)
gssxtrain <- subset(split, split=TRUE)
gssxtrain <- subset(split, split==TRUE)
str(gssx)
inTrain <- createDataPartition(y=gssx$getahead, p=.7, list=FALSE)
gssxtrain <- gssx[inTrain]
gssxtest <- gssx[-inTrain]
dim(gssxtrain)
gssxtrain <- gssx[inTrain,]
gssxtest <- gssx[-inTrain,]
summary(gssxtrain)
gsslm1 <- lm(getahead~., gssxtrain)
str(gssxtrain)
summary(gsslm1)
gsslm1 <- lm(getahead~age, gssxtrain)
gssxtrain$getahead <- as.character(gssxtrain$getahead)
gsslm1 <- lm(getahead~age, gssxtrain)
summary(gssxtrain$getahead)
summary(gssxtrain$age)
summary(faithful)
View(gssxtrain)
lm(getahead~age, data=gssxtrain)
lm(getahead=="Hard Work"~age, data=gssxtrain)
lm(getahead=="Hard Work"~., data=gssxtrain)
gsslm1 <- lm(getahead=="Hard Work"~., data=gssxtrain)
summary(gsslm1)
gsslm2 <- lm(getahead=="Hard Work"~educ, gssxtrain)
summary(gsslm2)
gsslm2 <- lm(getahead=="Hard Work"~union, gssxtrain)
summary(gsslm2)
gsslm3 <- lm(getahead=="Hard Work"~coninc, gssxtrain)
summary(gsslm3)
inc <- lm(coninc~educ, data=gss12)
summary(inc)
setwd("~/Documents/Datafiles/NFL//TheSunShineForecast")
list()
ls()
nflstats <- read.csv("nfl2014stats.csv")
summary(nflstats)
nflstats <- as.data.frame(read.csv("nfl2014stats.csv"))
str(nflstats)
nfllines <- as.data.frame(read.csv("nfl2014lines.csv"))
str(nfllines)
nflstats$TeamName
steelers <- nflstats[nflstats$TeamName=="Pittsburgh Steelers"]
steelers <- nflstats[TeamName=="Pittsburgh Steelers"]
steelers <- nflstats[,nflstats$TeamName=="Pittsburgh Steelers"]
steelers <- nflstats[nflstats$TeamName=="Pittsburgh Steelers",]
str(steelers)
nflstats[23,]
View(nflstats)
setwd("/~Documents/Datafiles/NFL/armchairanalysis")
setwd("~/Documents/Datafiles/NFL/armchairanalysis//NFLData_2012_WK1-8")
blocks <- read.csv("BLOCKS.csv")
str(blocks)
-80.41 + (.44*284) + (-3.33*0) + (-.01*27) +(1.15*62) + (.05*100) + (-8.4*0)
(332.57-249.28)/332.57
0.2504 * ((1236-1)/(1236-7-1))
1.8 + c(-1, 1)*.12*qt(-.68, df=55)
1.8 + c(-1, 1)*.12*qt(.68, df=55)
-.8 + c(-1, 1)*.12*qt(.68, df=55)
-.8 + c(-1, 1)*.12*qt(.68, df=(55-4-1))
-.8 + c(-1, 1)*.12*qt(.025, df=(55-4-1), lower.tail=FALSE)
-.8 + c(-1, 1)*.12*qt(.05, df=(55-4-1), lower.tail=FALSE)
0.2504*((1236-7-1)/(1236-1))
View(steelers)
View(nfllines)
rm(nfllines)
rm(nflstats)
rm(steelers)
setwd("~/Documents/Datafiles/NFL")
superbowl <- read.csv("superbowlstats.csv")
head(superbowl)
tail(superbowl)
which.max(superbowl$Attendance)
superbowl[49,]
superbowl <- read.csv("superbowlstats.csv", header=TRUE, stringsAsFactors=FALSE)
which.max(superbowl$Attendance)
str(superbowl)
atten <- superbowl$Attendance
head(atten)
atten <- sub(",", "", atten)
superbowl$Attendance <- as.numeric(sub(",", "", superbowl$Attendance))
summary(superbowl$Attendance)
superbowl$Attendance[is.na(superbowl$Attendance)]
superbowl$Attendance[superbowl$Attendance=="NA"]
tail(superbowl$Attendance)
superbowl[-49:52, ]
superbowl[-(49:52), ]
superbowl <- superbowl[-(49:52), ]
nrow(superbowl)
superbowl[48,]
View(superbowl)
winner <- superbowl$Winning.team
head(winner)
winner <- sub(c("_", "^", "(", ")", "2", "3", "*", "4", "5", "6", "7"), "", winner)
?lapply
eliminate <- c("_", "^", "(", ")", "2", "3", "*", "4", "5", "6", "7")
for(i in eliminate){
sub("i", "", winner)
}
head(winner)
for(i in eliminate){
winner[i] = sub("i", "", winner)
}
head(winner)
winner <- sub(list("_", "^", "(", ")", "2", "3", "*", "4", "5", "6", "7"), "", winner)
?grep
gregexpr("w+", winner)
head(winner[gregexpr("w+", winner)])
head(regmatches(winner, gregexpr("w+", winner)))
?gsubfn
install.packages("gsubfn")
library(gsubfn)
?gsubfn
winner <- gsubfn(list("_", "^", "(", ")", "2", "3", "*", "4", "5", "6", "7"), "", winner)
for(i in 1:length(eliminate)){
winners <- gsub(eliminate[i], "", winner)
}
string <- "log(M)"
gsub("log", "", string)
gsub("log\\(", "", string)
eliminate <- c("_", "^", "\\(", "\\)", "2", "3", "*", "4", "5", "6", "7")
for(i in 1:length(eliminate)){
winners <- gsub(eliminate[i], "", winner)
}
head(winners)
for(i in 1:length(eliminate)){
winners[i] <- gsub(eliminate[i], "", winner)
}
warning()
warnings()
head(winners)
winner1 <- gsub("[[:digits:]]", "", winner)
winner1 <- gsub("[[:digit:]]", "", winner)
head(winner1)
head(winner["[:alpha:]"])
gsub(grep("[[:alpha:]]", winner, invert=TRUE)), "", winner)
gsub(grep("[[:alpha:]]", winner, invert=TRUE), "", winner)
gsub("![[:alpha:]]", "", winner)
?diag()
head(substr(winner, [:alpha:])
head(substr(winner, :alpha:)
head(substr(winner, "[[:alpha:]]")
)
winner2 <- gsub("[^[:alpha:]]", "", winner)
head(winner2)
winner2
length(winners2)
length(winner2)
length(winner)
tail(winner)
nrow(superbowl$Winning.team)
str(superbowl$Winning.team)
superbowl$Winning.team <- gsub("[^[:alpha:]]", "", superbowl$Winning.team)
head(superbowl$Winning.team)
tail(superbowl$Winning.team)
superbowl$Winning.team <- gsub("note", "", superbowl$Winning.team)
tail(superbowl$Winning.team)
superbowl$Losing.team <- gsub("[^[:alpha:]]", "", superbowl$Losing.team)
superbowl$Losing.team <- gsub("note", "", superbowl$Losing.team)
superbowl$Losing.team
Winner.score <- strsplit(superbowl$Score, "_")[[1]]
score <- superbowl$Score
head(score)
strsplit(score, "-")[1]
sapply(score, "_")[1]
sapply(score, strsplit(score, "_")[1])
str(superbowl$Score)
head(score)
head(gsub("\\\\xff"), "", score)
head(gsub("\xff"), "", score)
head(gsub("xff"), "", score)
head(gsub("\\\\xff", "", score)
)
head(gsub("\xff", "", score))
superbowl$Score <- gsub("\xff", "", superbowl$Score)
head(superbowl$Score)
score <- superbowl$Score
winner.score <- sapply(score, FUN = function(x) {strsplit(x, split="_")[[1]][1]})
winner.score
Winner.score
sapply(score, FUN=strsplit(score, split="_"))
?strsplit
sapply(score, strsplit(score, "_"), fixed=TRUE)
strsplit(score, "_")
strsplit(score, "_")[1]
strsplit(score, "_")[[1]][1]
strsplit(score, "_")[[1]][2]
winner <- sapply(score, FUN=function(x) {strsplit(x, "_")[[1]][1]})
winner
winner[1]
class(winner)
str(winnter)
str(winner)
winner <- sapply(score, FUN=function(x) {strsplit(x, "[_]")[[1]][1]})
winner[1]
?sapply
winner2 <- lapply(score, FUN=function(x) {strsplit(x, "[_]")[[1]][1]})
winner2[1]
superbowl <- read.csv("superbowlstats.csv")
sb <- read.csv("superbowlstats.csv")
sb$Winner.score <- sapply(sb$score, FUN= function(x) {strplit(x, "_")[[1]][1]})
sb$Winner.score <- sapply(sb$Score, FUN= function(x) {strplit(x, "_")[[1]][1]})
sb$Winner.score <- sapply(sb$Score, FUN= function(x) {strsplit(x, "_")[[1]][1]})
sb$Winner.score <- sapply(sb$Score, FUN= function(x) {strsplit(x, "[_]")[[1]][1]})
sb <- read.csv("superbowlstats.csv", header=TRUE, stringsAsFactors=FALSE)
sb$Winner.score <- sapply(sb$Score, FUN= function(x) {strsplit(x, "[_]")[[1]][1]})
head(sb$Winner.score)
sb$Score <- gsub("\xff", "", sb$Score)
sb$Winner.score <- sapply(sb$Score, FUN= function(x) {strsplit(x, "[_]")[[1]][1]})
head(sb$winner)
head(sb$winner.score)
str(sb$winner.score)
head(sb$Score)
sb$Loser.score <- sapply(sb$Score, FUN= function(x) {strsplit(x, "_")[[1]][2]})
head(sb$Loser.score)
rm(list=ls())
source('~/Documents/Datafiles/NFL/superbowlstatsclean.R')
source('~/Documents/Datafiles/NFL/superbowlstatsclean.R')
str(sb)
table(sb$Winning.team)
table(sb$Losing.team)
sb$Totalsb <- sb$Winning.team + sb$Losing.team
sb$Totalsb <- sb$Winning.score + sb$Losing.score
sb$Winning.score <- as.numeric(sb$Winning.score)
str(sb)
sb$Winner.score <- as.numeric(sb$Winner.score)
sb$Loser.score <- as.numeric(sb$Loser.score)
winners <- as.data.frame(table(sb$Winning.team))
str(winners)
head(winners)
losers <- as.data.frame(table(sb$Losing.team))
total <- merge(winners, losers, Var1)
?merge
total <- merge(winners, losers, by= "Var1")
str(total)
View(total)
View(losers)
View(winners)
total2 <- merge(winners, losers, by="Var1", all.x=TRUE, all.y=TRUE)
View(total2)
total <- merge(winners, losers, by="Var1", all.x=TRUE, all.y=TRUE)
colnames(total) <- c("TeamName", "Wins", "Losses")
total$appear <- total$Wins + total$Losses
head(total)
total[total$TeamName="PittsburgSteelers"]
total[total$TeamName=="PittsburgSteelers"]
total[total$TeamName=="PittsburgSteelers",]
total[,TeamName=="PittsburgSteelers"]
total[TeamName=="PittsburgSteelers"]
total$TeamName=="PittsburghSteelers"
total[total$TeamName=="PittsburghSteelers",]
which.max(total$appear)
summary(total$appear)
View(sb)
View(total)
View(total2)
total2$Freq.x <- gsub("NA", "0", total2$Freq.x)
View(total2)
total2$Freq.y <- gsub("NA", "0", total2$Freq.y)
head(total2)
str(total2)
losses <- total2$Freq.y
losses <- gsub("NA", 0, losses)
losses <- gsub("NA", "0", losses)
losses <- gsub(NA, "0", losses)
losses <- total2$Freq.y
losses <- gsub(as.character(NA), "0", losses)
losses <- total2$Freq.y
losses <- gsub("NA", "0", losses)
losses <- as.character(total2$Freq.y)
losses <- gsub("NA", "0", losses)
total2[is.na(total2)] <- 0
head(total2)
rm(list=ls())
source('~/Documents/Datafiles/NFL/superbowlstatsclean.R')
head(total)
total$Winning.perc <- total$Wins/total$Appear
head(total)
write.csv("SBAppearances.csv", header=TRUE)
?write.csv
write.csv(total, "SBAppearances.csv", colnames=TRUE)
write.csv(total, "SBAppearances.csv", col.names=TRUE)
head(sb)
write.csv(sb, "cleansbstats.csv", col.names=TRUE)
x <- c(0.18, -1.54, 0.42, 0.95)
w <- c(2, 1, 3, 1)
(sum(x*y))/4
(sum(x*w))/4
xw <- x*w
sum(xw)
sum(x)/4
sum(((x-.0025)^2)*w)
sum(((x-.3)^2)*w)
sum(((x-1.077)^2)*w)
sum(((x-.1471)^2)*w)
xw/sum(w)
sum(xw)/sum(w)
x <- c(0.8, 0.47, 0.51, 0.73, 0.36, 0.58, 0.57, 0.85, 0.44, 0.42)
y <- c(1.39, 0.72, 1.55, 0.48, 1.19, -1.59, 1.23, -0.65, 1.49, 0.05)
lm(y~x-1)
lm(y~0+x)
library(datasets)
data(mtcars)
lm(mpg~wt, data=mtcars)
15*.4
1.5*.4
x <- c(8.58, 10.46, 9.01, 9.64, 8.86)
m <- sum(x)/length(x)
x-m
sum(x)
x
sum(x-m)/length(x)
x <- c(0.8, 0.47, 0.51, 0.73, 0.36, 0.58, 0.57, 0.85, 0.44, 0.42)
y <- c(1.39, 0.72, 1.55, 0.48, 1.19, -1.59, 1.23, -0.65, 1.49, 0.05)
lm(y~x)
sum(x)/length(x)
x <- c(8.58, 10.46, 9.01, 9.64, 8.86)
m <- sum(x)/lenght(x)
m <- sum(x)/length(x)
(x-m)/sd(x)
source('~/Documents/Datafiles/NFL/superbowlstatsclean.R')
